"use strict";angular.module("sbAdminApp").controller("MainCtrl",function($scope,$position,NgTableParams,$riffle,$http){$scope.d3_api,$scope.hb_interval=250,$scope.hb_on=!1,$scope.hb_fault_tollerance=0,$scope.msgTypes=[],$scope.parser={},$scope.system_status="GOOD",$scope.colors={green:"#00FF00",yellow:"#FFFF00",red:"#FF0000"},$scope.states=[{name:"FAULT",value:"00",level:"danger"},{name:"IDLE",value:"01",level:"success"},{name:"READY",value:"02",level:"success"},{name:"PUSHING",value:"03",level:"success"},{name:"COAST",value:"04",level:"success"},{name:"BRAKING",value:"05",level:"warning"},{name:"EMERGENCY_BRAKING",value:"06",level:"danger"},{name:"FRONT_AXLE_BRAKING",value:"07",level:"danger"},{name:"REAR_AXLE_BRAKING",value:"08",level:"danger"},{name:"WAITING_FOR_SAFE",value:"09",level:"warning"},{name:"SAFE",value:"0A",level:"success"}];var set_up_scope=function(parser){for(var i=0;i<parser.messages.length;i++){var message=parser.messages[i];if(parser.messages[i].cmd){var comand=parser.messages[i];$scope.msgTypes.push(comand)}else for(var g=0;g<message.values.length;g++){var value=message.values[g];$scope[value.title]={max:value.nominal_high,min:value.nominal_low,val:null,status_style:"info"}}}console.log("Updated Scope variables")};$http.get("../../parser.json").success(function(data){$scope.parser=data,console.log($scope.parser),console.log("Parser read successfully"),set_up_scope($scope.parser)}),$scope.WCM={},$scope.MCM={},$scope.VNM={},$scope.VSM={},$scope.BCM={},$scope.BMS={},$scope.update_states=function(sid,data){var modules=Object.keys($scope.parser.SID);console.log(modules),console.log(data);for(var u=0;u<modules.length;u++){var sid_from_mask=$scope.parser.SID[modules[u]].from;console.log(sid_from_mask),(sid_from_mask&parseInt(sid,16))===sid_from_mask&&"NONE"!==modules[u]&&(console.log("update status of: "+modules[u]),$scope[modules[u]+"_state"].curr=$scope.states[data[1]],console.log("updated: "+modules[u]+" State to: "+$scope[modules[u]+"_state"].curr.name))}},$scope.toggle_heartbeat=function(op){console.log("updating heartbeat"),$riffle.publish("hb_ctrl",[op,$scope.hb_interval,$scope.hb_fault_tollerance]),console.log("Sent: "+[op,$scope.hb_interval,$scope.hb_fault_tollerance]+" to hb_ctrl"),1==op?$scope.hb_on=!0:$scope.hb_on=!1},$scope.templates=[{label:"Heartbeat",message:"440#010101010101",endpoint:"cmd",sid:"440",msg_type:"01",data:"0101010101"},{label:"Start",message:"00#0000",endpoint:"cmd",sid:"440",msg_type:"16",data:"03"},{label:"Stop",message:"00#0000",endpoint:"cmd",sid:"440",msg_type:"16",data:"1606"}],$scope.modules=[{name:"NONE",mask:"FFF"},{name:"VNM",mask:"001"},{name:"VSM",mask:"002"},{name:"BCM",mask:"004"},{name:"MCM",mask:"008"},{name:"WCM",mask:"010"},{name:"BMS",mask:"020"},{name:"ALL",mask:"400"}],$scope.msgType=0,$scope.msgDataSize=0,$scope.selectedTemplate=$scope.templates[0],$scope.selectedType=$scope.msgTypes[0],$scope.customData=null,$scope.toModule=null,$scope.fromModule=null,$scope.rawMessage="",$scope.custMsgType="Template",$scope.sentMessages=[],$scope.messages=[],$scope.sortType="module",$scope.sortReverse=!1,$scope.messageSearch="",$scope.tableParams=new NgTableParams({},{dataset:$scope.messages}),$scope.sendMessage=function(){var endpoint,message;if("Template"==$scope.custMsgType)endpoint=$scope.selectedTemplate.endpoint,message=$scope.selectedTemplate.message,$scope.sentMessages.push({timestamp:(new Date).getTime(),sid:$scope.selectedTemplate.sid,type:$scope.selectedTemplate.label,data:$scope.selectedTemplate.data});else if("Custom"==$scope.custMsgType){console.log($scope.selectedType),endpoint="cmd";var data=$scope.customData;"ENTER_STATE"==$scope.selectedType.name&&(data=$scope.customData.value),message=$scope.custSid+"#"+$scope.selectedType.hex+data,console.log("Custom message to be sent: "+message),$scope.sentMessages.push({timestamp:(new Date).getTime(),sid:$scope.custSid,type:$scope.selectedType.name,data:data})}else"Raw"==$scope.custMsgType&&(console.log("raw messages are not recorded in sent table"),message=$scope.rawMessage,endpoint="cmd");$riffle.publish(endpoint,message),console.log("Sent message: "+message)},$scope.toggleCustMsgType=function(type){$scope.custMsgType=type},$scope.updateSID=function(){$scope.custSid=0;var to_mask=0,from_mask=0;$scope.toModule&&(to_mask=$scope.parser.SID[$scope.toModule.name].to),$scope.fromModule&&(from_mask=$scope.parser.SID[$scope.fromModule.name].from);var ored_masks=to_mask|from_mask;$scope.custSid=ored_masks.toString(16),$scope.custSid=Array(4-$scope.custSid.length).join("0")+$scope.custSid,console.log($scope.custSid)};nv.models.bulletChart();$scope.progress=[],$scope.valueFontColor="red",$scope.hideValue=!1,$scope.hideMinMax=!1,$scope.hideInnerShadow=!1,$scope.gaugeWidthScale=.3,$scope.gaugeColor="grey",$scope.showInnerShadow=!0,$scope.shadowOpacity=.5,$scope.shadowSize=3,$scope.shadowVerticalOffset=10,$scope.level_colors=["#00FF00","#FFFF00","#FF0000"],$scope.hb_gauge_custom_sectors=[{color:"#00ff00",lo:0,hi:2e3},{color:"#ffff00",lo:2e3,hi:5e3},{color:"#ff0000",lo:5e3,hi:7e3}],$scope.status_bar_options={chart:{type:"bulletChart",transitionDuration:500}},$scope.VNM_posX={},$scope.status_bar_data={title:"Progress",subtitle:"Distance m",ranges:[548.64,701.04,1609,1700],measures:[$scope.VNM_posX.val||0],markers:[548.64,701.04,1609,1700]},$scope.noGradient=!1,$scope.labelFontColor="green",$scope.startAnimationTime=0,$scope.donut=void 0,$scope.donutAngle=90,$scope.counter=!0,$scope.decimals=2,$scope.symbol="X",$scope.formatNumber=!0,$scope.humanFriendly=!0,$scope.humanFriendlyDecimal=!0,$scope.textRenderer=function(value){return value},$scope.MCM_linegraph_options={chart:{type:"lineChart",height:200,margin:{top:20,right:20,bottom:60,left:65},x:function(d){return d[0]},y:function(d){return d[1]},color:d3.scale.category10().range(),duration:300,useInteractiveGuideline:!0,clipVoronoi:!1,xAxis:{axisLabel:"X Axis",tickFormat:function(d){return d3.time.format("%m/%d/%y")(new Date(d))},showMaxMin:!1,staggerLabels:!0}}},$scope.MCM_linegraph_data=[{key:"Wheel 1",values:[]},{key:"Wheel 2",values:[]},{key:"Wheel 3",values:[]},{key:"Wheel 4",values:[]}],$scope.BCM_linegraph_data=[{key:"Brake 1",values:[]},{key:"Brake 2",values:[]},{key:"Brake 3",values:[]},{key:"Brake 4",values:[]}];var x=(new Date).getTime(),update_chart_values=function(){$scope.status_bar_data.measures=[$scope.VNM_posX.val||0],$scope.VSM_barchart_data=[{key:"Temperatures",values:[{label:"HV1",value:$scope.VSM_T_HV1.val||0},{label:"HV2",value:$scope.VSM_T_HV2.val||0},{label:"Motor1",value:$scope.VSM_T_motor1.val||0},{label:"Motor2",value:$scope.VSM_T_motor2.val||0},{label:"Motor3",value:$scope.VSM_T_motor3.val||0},{label:"Motor4",value:$scope.VSM_T_motor4.val||0},{label:"WCM1",value:$scope.VSM_T_WCM1.val||0},{label:"WCM2",value:$scope.VSM_T_WCM2.val||0},{label:"Cabin",value:$scope.VSM_T_cabin.val||0},{label:"12V1",value:$scope.VSM_T_12V1.val||0},{label:"12V2",value:$scope.VSM_T_12V2.val||0}]}],x=(new Date).getTime(),$scope.MCM_linegraph_data[0].values.push([x,$scope.MCM_HB1_spd.val]),$scope.MCM_linegraph_data[1].values.push([x,$scope.MCM_HB2_spd.val]),$scope.MCM_linegraph_data[2].values.push([x,$scope.MCM_HB3_spd.val]),$scope.MCM_linegraph_data[3].values.push([x,$scope.MCM_HB4_spd.val]),$scope.MCM_linegraph_data[0].values.length>20&&$scope.MCM_linegraph_data[0].values.shift(),$scope.MCM_linegraph_data[1].values.length>20&&$scope.MCM_linegraph_data[1].values.shift(),$scope.MCM_linegraph_data[2].values.length>20&&$scope.MCM_linegraph_data[2].values.shift(),$scope.MCM_linegraph_data[3].values.length>20&&$scope.MCM_linegraph_data[3].values.shift(),$scope.BCM_linegraph_data[0].values.push([x,$scope.BCM_Brake_1_spd.val]),$scope.BCM_linegraph_data[1].values.push([x,$scope.BCM_Brake_2_spd.val]),$scope.BCM_linegraph_data[2].values.push([x,$scope.BCM_Brake_3_spd.val]),$scope.BCM_linegraph_data[3].values.push([x,$scope.BCM_Brake_4_spd.val]),$scope.BCM_linegraph_data[0].values.length>20&&$scope.BCM_linegraph_data[0].values.shift(),$scope.BCM_linegraph_data[1].values.length>20&&$scope.BCM_linegraph_data[1].values.shift(),$scope.BCM_linegraph_data[2].values.length>20&&$scope.BCM_linegraph_data[2].values.shift(),$scope.BCM_linegraph_data[3].values.length>20&&$scope.BCM_linegraph_data[3].values.shift()};setInterval(function(){update_chart_values()},500),$scope.VSM_T_HV1={},$scope.VSM_T_HV2={},$scope.VSM_T_motor1={},$scope.VSM_T_motor2={},$scope.VSM_T_motor3={},$scope.VSM_T_motor4={},$scope.VSM_T_WCM1={},$scope.VSM_T_WCM2={},$scope.VSM_T_cabin={},$scope.VSM_T_12V1={},$scope.VSM_T_12V2={},$scope.VSM_barchart_options={chart:{type:"discreteBarChart",height:350,margin:{top:20,right:20,bottom:50,left:55},color:function(d,i){return d.value<100?"#00FF00":d.value>=100&&d.value<150?"#FFFF00":d.value>=150?"#FF0000":void 0},x:function(d){return d.label},y:function(d){return d.value+1e-10},showValues:!0,valueFormat:function(d){return d3.format(",.4f")(d)},forceY:[0,150],duration:500,xAxis:{axisLabel:""},yAxis:{axisLabel:"Temperature  C",axisLabelDistance:-10}}},$scope.VSM_barchart_data=[{key:"Temperatures",values:[{label:"HV1",value:$scope.VSM_T_HV1.val||0},{label:"HV2",value:$scope.VSM_T_HV2.val||0},{label:"Motor1",value:$scope.VSM_T_motor1.val||0},{label:"Motor2",value:$scope.VSM_T_motor2.val||0},{label:"Motor3",value:$scope.VSM_T_motor3.val||0},{label:"Motor4",value:$scope.VSM_T_motor4.val||0},{label:"WCM1",value:$scope.VSM_T_WCM1.val||0},{label:"WCM2",value:$scope.VSM_T_WCM2.val||0},{label:"Cabin",value:$scope.VSM_T_cabin.val||0},{label:"12V1",value:$scope.VSM_T_12V1.val||0},{label:"12V2",value:$scope.VSM_T_12V2.val||0}]}],$scope.get_status=function(val,max,min){var warn_max=max-.1*max,warn_min=min+.1*max;return val>max||min>val?"danger":val>=warn_max||warn_min>=val?"warning":max>=val&&val>=min?"success":"info"};var add_message_to_array=function(timestamp,sid,type,data){$scope.messages.length>30&&$scope.messages.shift(),$scope.messages.push({timestamp:timestamp,sid:sid,type:type,data:data})};$riffle.subscribe("data",function(data){console.log("got parsed data");for(var i=0;i<data.length;i++){var title=data[i][0],max=$scope[title].max,min=$scope[title].min;$scope[data[i][0]].val=data[i][1],$scope[title].status_style=$scope.get_status($scope[title].val,max,min)}}),$riffle.subscribe("hb",function(data){for(var modules=Object.keys(data.modules),f=0;f<modules.length;f++)$scope[modules[f]]=data.modules[modules[f]];$scope.system_status=data.system_status}),$riffle.subscribe("can",function(data){console.log("got can data");for(var i=0;i<data.length;i++)add_message_to_array(data[i][0],data[i][1],data[i][2],data[i][3])}),$scope.upperLimit=25,$scope.lowerLimit=-25,$scope.unit="",$scope.precision=2,$scope.roll_ranges=[{min:-25,max:-10,color:"#FF0000"},{min:-10,max:-2,color:"#FFFF00"},{min:-2,max:2,color:"#00FF00"},{min:2,max:10,color:"#FFFF00"},{min:10,max:25,color:"#FF0000"}],$scope.yaw_ranges=[{min:-25,max:-5,color:"#FF0000"},{min:-5,max:-2,color:"#FFFF00"},{min:-2,max:2,color:"#00FF00"},{min:2,max:5,color:"#FFFF00"},{min:5,max:25,color:"#FF0000"}],$scope.pitch_ranges=[{min:-25,max:-4,color:"#FF0000"},{min:-4,max:-2,color:"#FFFF00"},{min:-2,max:2,color:"#00FF00"},{min:2,max:4,color:"#FFFF00"},{min:4,max:25,color:"#FF0000"}],$scope.options={chart:{type:"lineChart",height:450,margin:{top:20,right:20,bottom:40,left:55},x:function(d){return d.x},y:function(d){return d.y},useInteractiveGuideline:!0,dispatch:{stateChange:function(e){console.log("stateChange")},changeState:function(e){console.log("changeState")},tooltipShow:function(e){console.log("tooltipShow")},tooltipHide:function(e){console.log("tooltipHide")}},xAxis:{axisLabel:"Time (ms)"},yAxis:{axisLabel:"Voltage (v)",tickFormat:function(d){return d3.format(".02f")(d)},axisLabelDistance:-10},callback:function(chart){console.log("!!! lineChart callback !!!")}},title:{enable:!0,text:"Velocity and Acceleration"},subtitle:{enable:!0,text:"Velocity and Acceleration",css:{"text-align":"center",margin:"10px 13px 0px 7px"}},caption:{enable:!1,text:"Velocity and Accelleration of the BadgerLoop Pod",css:{"text-align":"justify",margin:"10px 13px 0px 7px"}}}});